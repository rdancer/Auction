#BlueJ class context
comment0.params=
comment0.target=java.lang.String\ getClientId()
comment1.params=clientId
comment1.target=void\ setClientId(java.lang.String)
comment10.params=
comment10.target=void\ run()
comment11.params=
comment11.target=void\ commandLoop()
comment12.params=
comment12.target=void\ run()
comment13.params=itemId\ amount\ clientId
comment13.target=void\ bid(java.lang.String,\ java.math.BigDecimal,\ java.lang.String)
comment14.params=itemId
comment14.target=void\ cancel(java.lang.String)
comment15.params=
comment15.target=java.util.Map\ readFromClient()
comment16.params=message
comment16.target=void\ respond(java.lang.String)
comment17.params=
comment17.target=java.lang.String\ readWholeMessage()
comment18.params=reuseScanner
comment18.target=java.util.Map\ readFromClient(java.util.Scanner)
comment18.text=Kludge\ begin\ *****************
comment19.params=reuseScanner
comment19.target=java.lang.String\ readWholeMessage(java.util.Scanner)
comment2.params=
comment2.target=java.io.BufferedReader\ getSocketIn()
comment20.params=tcpPortNumber
comment20.target=void\ runServerOnTCPPort(int)
comment20.text=Kludge\ end\ *****************
comment21.params=args
comment21.target=void\ main(java.lang.String[])
comment3.params=reader
comment3.target=void\ setSocketIn(java.io.BufferedReader)
comment4.params=
comment4.target=java.io.PrintWriter\ getSocketOut()
comment5.params=writer
comment5.target=void\ setSocketOut(java.io.PrintWriter)
comment6.params=
comment6.target=void\ run()
comment7.params=clientId\ s
comment7.target=void\ sendToSingleClient(java.lang.String,\ java.lang.String)
comment8.params=s
comment8.target=void\ broadcastToAllRegisteredClients(java.lang.String)
comment9.params=tcpPortNumber
comment9.target=Server(int)
comment9.text=\n\ Constructor\ for\ objects\ of\ class\ Server\n
numComments=22
